{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","button","messageContainer","messageStart","messageWin","messageLose","gameScore","fieldRows","querySelectorAll","fieldCells","theSameCellsAdded","addNewCell","startCell","Math","floor","random","length","classList","add","textContent","endGameCheck","allCellsFilled","every","item","notTheSameNeighbors","i","iInner","children","nextElementSibling","remove","addCells","sacrifice","direction","indexRow","sortCells","reverse","append","array","sort","a","b","needAddNewCell","arrayRow","some","addEventListener","className","e","fieldCellsAfterEvent","contains","columnCells","push","filter","_","index","key","needAddUp","whetherToAddNewCell","needAddDown","needAddLeft","iRow","needAddRigth","check"],"mappings":"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","file":"main.b74b00cc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst button = body.querySelector('.button');\nconst messageContainer = body.querySelector('.message-container');\nconst messageStart = messageContainer.querySelector('.message-start');\nconst messageWin = messageContainer.querySelector('.message-win');\nconst messageLose = messageContainer.querySelector('.message-lose');\nconst gameScore = body.querySelector('.game-score');\n\nconst fieldRows = [...body.querySelectorAll('.field-row')];\nconst fieldCells = [...document.querySelectorAll('.field-cell')];\nlet theSameCellsAdded = false;\n\nbutton.addEventListener('click', () => {\n  for (let i = 0; i < fieldCells.length; i++) {\n    fieldCells[i].className = 'field-cell';\n    fieldCells[i].textContent = '';\n  }\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  gameScore.textContent = 0;\n\n  addNewCell();\n  addNewCell();\n});\n\nbody.addEventListener('keyup', (e) => {\n  const fieldCellsAfterEvent = [...document.querySelectorAll('.field-cell')];\n\n  if (messageStart.classList.contains('hidden')\n    && messageWin.classList.contains('hidden')\n    && messageLose.classList.contains('hidden')) {\n    const columnCells = [];\n\n    for (let i = fieldRows.length; i > 0; i--) {\n      columnCells\n        .push(fieldCellsAfterEvent.filter((_, index) => (index + i) % 4 === 0));\n    }\n\n    switch (e.key) {\n      case 'ArrowUp':\n        const needAddUp = needAddNewCell(columnCells, e.key);\n\n        for (let i = 0; i < columnCells.length; i++) {\n          addCells(columnCells[i], e.key);\n        }\n\n        whetherToAddNewCell(needAddUp);\n        break;\n      case 'ArrowDown':\n        const needAddDown = needAddNewCell(columnCells, e.key);\n\n        for (let i = 0; i < columnCells.length; i++) {\n          addCells(columnCells[i], e.key);\n        }\n\n        whetherToAddNewCell(needAddDown);\n        break;\n      case 'ArrowLeft':\n        const needAddLeft = needAddNewCell(fieldRows, e.key);\n\n        for (let iRow = 0; iRow < fieldRows.length; iRow++) {\n          addCells([...fieldRows[iRow].children], e.key, iRow);\n        }\n\n        whetherToAddNewCell(needAddLeft);\n        break;\n      case 'ArrowRight':\n        const needAddRigth = needAddNewCell(fieldRows, e.key);\n\n        for (let iRow = 0; iRow < fieldRows.length; iRow++) {\n          addCells([...fieldRows[iRow].children], e.key, iRow);\n        }\n\n        whetherToAddNewCell(needAddRigth);\n        break;\n    }\n  }\n\n  if (body.querySelector('.field-cell--2048')) {\n    messageWin.classList.remove('hidden');\n  }\n\n  function whetherToAddNewCell(check) {\n    if (theSameCellsAdded || check) {\n      addNewCell();\n      theSameCellsAdded = false;\n    }\n  }\n});\n\nfunction addNewCell() {\n  let startCell = '';\n\n  do {\n    startCell = fieldCells[Math.floor(Math.random() * fieldCells.length)];\n  } while (startCell.classList.length !== 1);\n\n  if (Math.random() > 0.9) {\n    startCell.classList.add('field-cell--4');\n    startCell.textContent = '4';\n  } else {\n    startCell.classList.add('field-cell--2');\n    startCell.textContent = '2';\n  }\n\n  endGameCheck();\n}\n\nfunction endGameCheck() {\n  const allCellsFilled = fieldCells.every(item => item.classList.length === 2);\n  let notTheSameNeighbors = true;\n\n  for (let i = 0; i < fieldRows.length; i++) {\n    for (let iInner = 0; iInner < fieldRows[i].children.length; iInner++) {\n      if (fieldRows[i].children[iInner].nextElementSibling) {\n        if (fieldRows[i]\n          .children[iInner].textContent === fieldRows[i]\n          .children[iInner].nextElementSibling.textContent) {\n          notTheSameNeighbors = false;\n        }\n      }\n\n      if (i < 3) {\n        if (fieldRows[i]\n          .children[iInner].textContent === fieldRows[i + 1]\n          .children[iInner].textContent) {\n          notTheSameNeighbors = false;\n        }\n      }\n    }\n  }\n\n  if (allCellsFilled && notTheSameNeighbors) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction addCells(sacrifice, direction, indexRow) {\n  switch (direction) {\n    case 'ArrowUp':\n    case 'ArrowLeft':\n      sortCells(sacrifice);\n      break;\n\n    case 'ArrowDown':\n    case 'ArrowRight':\n      sacrifice.reverse();\n      sortCells(sacrifice);\n      sacrifice.reverse();\n      break;\n  }\n\n  switch (direction) {\n    case 'ArrowUp':\n    case 'ArrowDown':\n      for (let i = 0; i < sacrifice.length; i++) {\n        fieldRows[i].append(sacrifice[i]);\n      }\n      break;\n\n    case 'ArrowLeft':\n    case 'ArrowRight':\n      for (let i = 0; i < sacrifice.length; i++) {\n        fieldRows[indexRow].append(sacrifice[i]);\n      }\n      break;\n  }\n\n  function sortCells(array) {\n    array.sort((a, b) => {\n      if (a.textContent === '') {\n        return 1;\n      }\n\n      if (b.textContent === '') {\n        return -1;\n      }\n\n      if (a.textContent === b.textContent) {\n        a.classList.remove(`field-cell--${a.textContent}`);\n        a.textContent = '';\n        b.classList.remove(`field-cell--${b.textContent}`);\n        b.textContent *= 2;\n        b.classList.add(`field-cell--${b.textContent}`);\n        theSameCellsAdded = true;\n        gameScore.textContent = +gameScore.textContent + +b.textContent;\n      }\n\n      return 0;\n    });\n  }\n}\n\nfunction needAddNewCell(arrayRow, direction) {\n  return arrayRow.some(item => {\n    switch (direction) {\n      case 'ArrowLeft':\n        for (let i = item.children.length - 1; i > 0; i--) {\n          if (item.children[i].textContent\n            && !item.children[i - 1].textContent) {\n            return true;\n          }\n        }\n        break;\n\n      case 'ArrowRight':\n        for (let i = 0; i < item.children.length - 1; i++) {\n          if (item.children[i].textContent\n            && !item.children[i + 1].textContent) {\n            return true;\n          }\n        }\n        break;\n\n      case 'ArrowUp':\n        for (let i = item.length - 1; i > 0; i--) {\n          if (item[i].textContent && !item[i - 1].textContent) {\n            return true;\n          }\n        }\n        break;\n\n      case 'ArrowDown':\n        for (let i = 0; i < item.length - 1; i++) {\n          if (item[i].textContent && !item[i + 1].textContent) {\n            return true;\n          }\n        }\n        break;\n    }\n  });\n}\n"]}